name: worker-ci
on: { workflow_dispatch: {}, push: { branches: [ main ] } }
permissions: { id-token: write, contents: read }
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build & push worker
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG }} worker-shim
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ vars.IMAGE_NAME }}:${{ vars.IMAGE_TAG }}
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Provision + Deploy worker (ACI)
        env:
          SERVICE_BUS_CONN: ${{ secrets.SERVICE_BUS_CONN }}
          AZ_SB_NAMESPACE: ${{ secrets.AZ_SB_NAMESPACE }}
          POSTGRES_DSN: ${{ secrets.POSTGRES_DSN }}
          INTELLIOPTICS_API_TOKEN: ${{ secrets.INTELLIOPTICS_API_TOKEN }}
          INTELLIOPTICS_ENDPOINT: ${{ vars.INTELLIOPTICS_ENDPOINT }}
          AZ_RESOURCE_GROUP: ${{ vars.AZ_RESOURCE_GROUP }}
          AZ_LOCATION: ${{ vars.AZ_LOCATION }}
          ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
          IMAGE_NAME: ${{ vars.IMAGE_NAME }}
          IMAGE_TAG: ${{ vars.IMAGE_TAG }}
        run: bash deploy/aci-worker.sh
